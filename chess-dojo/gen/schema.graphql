schema {
  query: Query
  mutation: Mutation
}
enum Color {
  BLACK
  WHITE
}
type Mutation {
  addMoveToRepertoire(parentMove: Uuid, newMove: NewRepertoireMove!): RepertoireMove!
}
""""""
input NewRepertoireMove {
  comment: String
  moveSan: String!
}
"""A repertoire, for white black or both"""
type Repertoire {
  id: Uuid!
  author: Uuid!
  description: String!
  black: SideRepertoire
  white: SideRepertoire
}
type Query {
  apiVersion: String!
  repertoires: [Repertoire!]!
}
"""Uuid"""
scalar Uuid
"""A repertoire for a specific side"""
type SideRepertoire {
  id: Uuid!
  color: Color!
  author: Uuid!
  moves: [RepertoireMove!]!
}
"""A specific move in a repertoire"""
type RepertoireMove {
  id: String!
  moveSan: String!
  nextMoves: [Uuid!]!
  comment: String
}
